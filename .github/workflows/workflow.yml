name: "Build, Test, and Publish"

on:
  push:
  pull_request:

jobs:
  baw-client:
    name: Build Baw Client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Baw Client
        uses: actions/checkout@v2
        with:
          repository: QutEcoacoustics/baw-client
          ref: migration

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Create environment
        run: |
          echo '{
              "environments": {
                "production": {
                  "apiRoot": "https://staging.ecosounds.org",
                  "siteRoot": "http://development.ecosounds.org:4200",
                  "siteDir": "/assets/old-client/",
                  "ga": { "trackingId": "" }
                }
              },
              "values": {
                "keys": { "googleMaps": "" },
                "brand": {
                  "name": "<<brand name here>>",
                  "title": "<<brand name here>> | Acoustic Workbench"
                },
                "content": {
                  "research": {
                    "header_title": "Custom Menu",
                    "items": [
                      {
                        "innerText": "Example",
                        "url": "http://www.EXAMPLE.org/awebpage"
                      }
                    ]
                  }
                }
              }
            }' > ./buildConfig/environmentSettings.json

      - name: Read environment
        run: cat buildConfig/environmentSettings.json

      - name: NPM install
        run: npm install

      - name: Build
        run: npm run build -- --production

      - name: Publish build files
        uses: actions/upload-artifact@v2
        with:
          path: bin/
          name: baw-client

  test:
    name: Unit Tests (${{ matrix.os }})
    needs: baw-client
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest

    steps:
      - name: Checkout Workbench Client
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: baw-client

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Copy baw-client to assets
        run: cp -r baw-client/* src/assets/old-client

      - name: NPM install
        run: npm install

      - name: Run test suite on chrome
        run: npm run test:pipeline -- --browsers ChromeHeadless

      - name: Run test suite on firefox
        run: npm run test:pipeline -- --browsers FirefoxHeadless

      - name: Run test suite on edge
        run: npm run test:pipeline -- --browsers EdgeHeadless
        if: matrix.os == 'windows-latest'

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (OS ${{ matrix.os }})
          path: TESTS-*.xml

      - name: Lint project
        run: npm run lint

  # e2e:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12.x

  #     - name: NPM install
  #       run: npm install

  #     # Webdriver downloads the latest driver version by default. If the version does not match the version of chrome
  #     # installed, it will crash during e2e tests. Best solution appears to be to download the version of the webdriver
  #     # which matches the CIs google chrome
  #     # https://github.com/angular/protractor/issues/5460
  #     - name: Ensure webdriver installs correct adapter for current chrome version
  #       run: npm run webdriver -- update --versions.chrome=$(google-chrome --version | cut -d ' ' -f 3)

  #     - name: Run e2e test suite
  #       run: npm run e2e -- --webdriver-update=false

  ssr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build container
        run: docker build -t qutecoacoustics/workbench-client .

      - name: Run docker container
        run: docker run -d -p 4000:4000 -v "$(pwd)/src/assets/environment.json:/environment.json" qutecoacoustics/workbench-client

      - name: Retrieve home page
        run: wget localhost:4000

      - name: Validate title
        run: cat index.html | grep -o "<title>&lt;&lt; brandName &gt;&gt;</title>"

      - name: Validate routing
        run: cat index.html | grep -o "<\/router-outlet><baw-home.*<\/baw-home>"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: NPM install
        run: npm install

      - name: Build the workbench client
        run: npm run build

      - name: Publish build files
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/workbench-client/
          name: workbench-client

  # publish_test_results:
  #   name: "Publish Unit Tests Results"
  #   needs: test
  #   runs-on: ubuntu-latest
  #   # the build-and-test job might be skipped, we don't need to run this job then
  #   if: success() || failure()

  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: artifacts
  #     - name: Publish Unit Test Results
  #       uses: EnricoMi/publish-unit-test-result-action@v1.5
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         files: artifacts/**/TESTS-*.xml
  #         report_individual_runs: true
  #         deduplicate_classes_by_file_name: true

  publish:
    name: "Publish Docker Container"
    runs-on: "ubuntu-latest"
    needs: ["test", "build"]
    # only on tag or commit to master
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tag'))
    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: qutecoacoustics/workbench-client
          # this repo is superseding the current workbench-client container,
          # however currently they both exist.
          tags: beta
          tag_with_ref: true
          tag_with_sha: true
          path: .
          add_git_labels: true
          push: true

  merge:
    name: "auto-merge"
    runs-on: "ubuntu-latest"
    needs: ["test", "build"]
    # needs: ["test", "e2e", "build"]

    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'

    steps:
      - name: "Merge pull request"
        uses: "actions/github-script@v2"
        with:
          github-token: "${{ secrets.AUTO_MERGE_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            await github.pulls.merge({
              merge_method: "squash",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
