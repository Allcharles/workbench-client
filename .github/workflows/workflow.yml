name: "Build, Test, and Publish"

on:
  push:
  pull_request:

jobs:
  test:
    name: Unit Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: NPM install
        run: npm install

      - name: Run test suite on chrome
        run: npm run test:pipeline -- --browsers ChromeHeadless

      - name: Run test suite on firefox
        run: npm run test:pipeline -- --browsers FirefoxHeadless

      - name: Run test suite on edge
        run: npm run test:pipeline -- --browsers EdgeHeadless
        if: matrix.os == 'windows-latest'

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (OS ${{ matrix.os }})
          path: TESTS-*.xml

      - name: Lint project
        run: npm run lint

  e2e:
    name: E2E Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: NPM install
        run: npm install

      # Temporarily disabled
      # - name: Run e2e test suite
      #   run: npm run e2e

  ssr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: NPM install
        run: npm install

      - name: Build container
        run: docker build -t qutecoacoustics/workbench-client .

      - name: Run docker container
        run: docker run -d -p 4000:4000 -v "$(pwd)/src/assets/environment.json:/environment.json" qutecoacoustics/workbench-client

      - name: Read home page
        run: wget localhost:4000

      - name: Validate home page
        run: cat index.html | grep "<title>&lt;&lt; brandName &gt;&gt;</title>"

      - name: This should fail
        run: curl localhost:4000 | grep "<title>&lt;&lt; wrongName &gt;&gt;</title>"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: NPM install
        run: npm install

      - name: Build the workbench client
        run: npm run build

      - name: Publish build files
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/workbench-client/
          name: workbench-client

  publish_test_results:
    name: "Publish Unit Tests Results"
    needs: test
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: artifacts/**/TESTS-*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: true

  publish:
    name: "Publish Docker Container"
    runs-on: "ubuntu-latest"
    needs: ["test", "build"]
    # only on tag or commit to master
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || contains(github.ref, 'refs/tag'))
    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: qutecoacoustics/workbench-client
          # this repo is superseding the current workbench-client container,
          # however currently they both exist.
          tags: beta
          tag_with_ref: true
          tag_with_sha: true
          path: .
          add_git_labels: true
          push: true

  merge:
    name: "auto-merge"
    runs-on: "ubuntu-latest"
    needs: ["test", "e2e", "build"]

    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'

    steps:
      - name: "Merge pull request"
        uses: "actions/github-script@v2"
        with:
          github-token: "${{ secrets.AUTO_MERGE_TOKEN }}"
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo

            await github.pulls.merge({
              merge_method: "squash",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
