# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
  vmImage: "windows-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: 10.x
    displayName: "Install Node.js"

  - task: Npm@1
    inputs:
      command: install
    displayName: "NPM install"

  - task: Powershell@2
    inputs:
      script: Get-AppXPackage -AllUsers -Name Microsoft.MicrosoftEdge | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register "$($_.InstallLocation)\AppXManifest.xml" -Verbose}
      pwsh: true
    displayName: "Install Edge"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run test:pipeline
    displayName: "Run test suite"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/TESTS-*.xml"
      mergeTestResults: true
      publishRunAttachments: true
    displayName: "Publish test results"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: "cobertura"
      summaryFileLocation: "$(Build.SourcesDirectory)/coverage/workbench-client/cobertura-coverage.xml"
      failIfCoverageEmpty: true
    condition: succeededOrFailed()
    displayName: "Publish code coverage results"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run stats
    displayName: "Analyze workbench client bundle"

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.SourcesDirectory)/dist/workbench-client/stats.json"
      artifactName: analysis
    displayName: "Publish analysis"

  - task: DeleteFiles@1
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/dist/**/*"
    displayName: "Cleanup analysis files"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run build
    displayName: "Build the workbench client"

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.SourcesDirectory)/dist/workbench-client/"
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/workbench-client.zip"
      includeRootFolder: false
    displayName: "Zip workbench files"

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)/workbench-client.zip"
      artifactName: workbench-client
    displayName: "Publish build files"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run lint
    displayName: "Lint project"
