# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      sudo apt-get install libxss1 libappindicator1 libindicator7
      wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      sudo apt install ./google-chrome*.deb
    displayName: 'Install Chrome'
  - script: |
      npm install -g @angular/cli
      npm install
      ng build --prod
    displayName: 'npm install and build'
  - script: |
      npm test -- --watch=false
    displayName: 'Test suite'
  - script: |
      npm run lint
    displayName: 'Lint project'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '**/coverage/workbench-client/cobertura-coverage.xml'
      reportDirectory: 'coverage/workbench-client/'
      failIfCoverageEmpty: true

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TESTS-*.xml'
      mergeTestResults: true
      publishRunAttachments: true
  #- task: PublishPipelineArtifact@1
  #  displayName: 'Publish Pipeline Artifact'
  #  inputs:
  #    artifactName: 'workbench-client'
  #    targetPath: 'dist/workbench-client'
  #- task: PublishBuildArtifacts@1
  #  displayName: 'Publish Build Artifact'
  #  inputs:
  #    PathtoPublish: 'dist/workbench-client'
  #    ArtifactName: workbench-client
