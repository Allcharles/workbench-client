# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    mac:
      imageName: "macOS-latest"
    windows:
      imageName: "windows-latest"

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

pool:
  vmImage: "$(imageName)"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: 12.x
    displayName: "Install Node.js"

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      path: $(npm_config_cache)
      cacheHitVar: CACHE_RESTORED
      restoreKeys: |
        npm | "$(Agent.OS)"
        npm
    displayName: "Cache NPM packages"

  - task: Npm@1
    inputs:
      command: install
    displayName: "NPM install"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run test:pipeline
    displayName: "Run test suite"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run e2e -- --capabilities.chromeOptions.args="--headless"
    displayName: "Run e2e test suite"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/TESTS-*.xml"
      mergeTestResults: true
      publishRunAttachments: true
    displayName: "Publish test results"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: "cobertura"
      summaryFileLocation: "$(Build.SourcesDirectory)/coverage/workbench-client/cobertura-coverage.xml"
      failIfCoverageEmpty: true
    condition: succeededOrFailed()
    displayName: "Publish code coverage results"

  - task: Npm@1
    condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))
    inputs:
      command: custom
      customCommand: run build
    displayName: "Build the workbench client"

  - task: ArchiveFiles@2
    condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))
    inputs:
      rootFolderOrFile: "$(Build.SourcesDirectory)/dist/workbench-client/"
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/workbench-client.zip"
      includeRootFolder: false
    displayName: "Zip workbench files"

  - task: PublishBuildArtifacts@1
    condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)/workbench-client.zip"
      artifactName: workbench-client
    displayName: "Publish build files"

  - task: Npm@1
    inputs:
      command: custom
      customCommand: run lint
    displayName: "Lint project"
